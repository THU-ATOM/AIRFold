version: '3.8'

services:
  gui:
    build:
      context: ./gui
      dockerfile: Dockerfile
    ports:
      - "80:4173"
    volumes:
      - ./gui:/app
    command: >
      bash -c "yrm use taobao
      && yarn
      && yarn build
      && yarn preview --host --port 4173"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./api:/app
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
      - HOST=0.0.0.0
      - PORT=8081
    command: uvicorn api:app --host 0.0.0.0 --port 8081

  worker_add:
    build:
      context: ./services/add
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/add:/worker
    command: celery -A worker worker --loglevel=info -Q queue_add --concurrency=2

  worker_submit:
    build:
      context: ./services/submit
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/submit:/worker
      - /data:/data
      - ./lib:/worker/lib
    command: celery -A worker worker --loglevel=info -Q queue_submit --concurrency=4
  
  worker_blast:
    build:
      context: ./services/blast
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/blast:/worker
      - /data:/data
      - ./lib:/worker/lib
    command: celery -A worker worker --loglevel=info -Q queue_blast --concurrency=4

  worker_jackhmmer:
    build:
      context: ./services/jackhmmer
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/jackhmmer:/worker
      - /data:/data
      - ./lib:/worker/lib
    command: celery -A worker worker --loglevel=info -Q queue_jackhmmer --concurrency=4

  worker_hhblits:
    build:
      context: ./services/hhblits
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/hhblits:/worker
      - /data:/data
      - ./lib:/worker/lib
    command: celery -A worker worker --loglevel=info -Q queue_hhblits --concurrency=4

  worker_mergemsa:
    build:
      context: ./services/mergemsa
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/mergemsa:/worker
      - /data:/data
      - ./lib:/worker/lib
    command: celery -A worker worker --loglevel=info -Q queue_mergemsa --concurrency=4

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
      
  redis:
    image: redis:latest

  # Optionally, you can also include Flower for monitoring the Celery tasks
  # flower:
  #   image: mher/flower
  #   command: celery --broker=amqp://rabbitmq:5672 flower --port=5555
  #   ports:
  #     - "5556:5555"
  #   depends_on:
  #     - rabbitmq

networks:
  default:
    driver: bridge
